{"ast":null,"code":"import { loadArticlesLoading, loadArticlesSuccess, loadArticlesError, loadEventsLoading, loadEventsSuccess, loadEventsError } from '../index';\nimport Api from '../../../api/index';\nexport function loadArticles() {\n  return dispatch => {\n    // First, dispatch the LOAD_ArticleS_LOADING action, allowing the rest of our app to detect when\n    // we've started loading Articles.\n    dispatch(loadArticlesLoading()); // Now, start loading the Articles.\n\n    Api.getAllArticle().then( // If the todos were loaded successfully, dispatch the LOAD_TODOS_SUCCESS action allowing the todos to be added to the store\n    articles => dispatch(loadArticlesSuccess(articles)), // If there was an error loading todos, dispatch the LOAD_TODOS_ERROR action providing details of the error\n    error => dispatch(loadArticlesError(error.message || \"Unexpected error!\")));\n  };\n}","map":{"version":3,"sources":["D:/CodeStuff/WikiForum/WikiForum/client/src/redux/actions/thunks/index.js"],"names":["loadArticlesLoading","loadArticlesSuccess","loadArticlesError","loadEventsLoading","loadEventsSuccess","loadEventsError","Api","loadArticles","dispatch","getAllArticle","then","articles","error","message"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAsEC,iBAAtE,EAAyFC,iBAAzF,EAA4GC,eAA5G,QAAmI,UAAnI;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAOC,QAAQ,IAAI;AAEf;AACA;AACAA,IAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR,CAJe,CAMf;;AACAM,IAAAA,GAAG,CAACG,aAAJ,GACKC,IADL,EAGQ;AACAC,IAAAA,QAAQ,IAAIH,QAAQ,CAACP,mBAAmB,CAACU,QAAD,CAApB,CAJ5B,EAMQ;AACAC,IAAAA,KAAK,IAAIJ,QAAQ,CAACN,iBAAiB,CAACU,KAAK,CAACC,OAAN,IAAiB,mBAAlB,CAAlB,CAPzB;AAQH,GAfD;AAgBH","sourcesContent":["import { loadArticlesLoading, loadArticlesSuccess, loadArticlesError, loadEventsLoading, loadEventsSuccess, loadEventsError } from '../index';\r\nimport Api from '../../../api/index';\r\n\r\nexport function loadArticles() {\r\n    return dispatch => {\r\n\r\n        // First, dispatch the LOAD_ArticleS_LOADING action, allowing the rest of our app to detect when\r\n        // we've started loading Articles.\r\n        dispatch(loadArticlesLoading());\r\n\r\n        // Now, start loading the Articles.\r\n        Api.getAllArticle()\r\n            .then(\r\n\r\n                // If the todos were loaded successfully, dispatch the LOAD_TODOS_SUCCESS action allowing the todos to be added to the store\r\n                articles => dispatch(loadArticlesSuccess(articles)),\r\n\r\n                // If there was an error loading todos, dispatch the LOAD_TODOS_ERROR action providing details of the error\r\n                error => dispatch(loadArticlesError(error.message || \"Unexpected error!\")));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}