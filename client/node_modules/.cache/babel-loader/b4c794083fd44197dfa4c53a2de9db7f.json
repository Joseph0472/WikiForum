{"ast":null,"code":"import _classCallCheck from\"/Users/Zorro/ReactTestFolder/wikiforumcs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Zorro/ReactTestFolder/wikiforumcs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Zorro/ReactTestFolder/wikiforumcs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Zorro/ReactTestFolder/wikiforumcs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import $ from'jquery';var FetchArticle=/*#__PURE__*/function(_Component){_inherits(FetchArticle,_Component);var _super=_createSuper(FetchArticle);function FetchArticle(props){var _this;_classCallCheck(this,FetchArticle);_this=_super.call(this);_this.state={};return _this;}// Consider: use hook method to execute ajax request to fetch full article content\n// Or use async fetch in serverside\n_createClass(FetchArticle,[{key:\"render\",value:function render(){function fetchArticle(){var searchTerm=document.getElementById('inputSearchTerm').value;// console.log(searchTerm)\n$.ajax({url:\"https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&titles=\"+searchTerm+\"&redirects=true\",headers:{'Access-Control-Allow-Origin':'*','Content-Type':'application/json'},method:'GET',dataType:'jsonp',data:'',success:function success(data){// this.setState({data: data});   // notice\n// console.log(data.query.pages)\nvar dataNum=Object.keys(data.query.pages)[0];console.log(data.query.pages);if(dataNum==-1){$('#articleData').empty();$('#articleData').append(\"<h1>Sorry, no such article titiled by: \".concat(data.query.pages[dataNum].title,\", please try to search in Wikipedia and paste the article titile here.</h1>\"));}else{$('#articleData').empty();$('#articleData').append(\"<h1>\".concat(data.query.pages[dataNum].title,\"</h1>\"));$('#articleData').append(data.query.pages[dataNum].extract);}},error:function error(xhr,status,err){console.error('article not found');}});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter a search term\",id:\"inputSearchTerm\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"fetch\",onClick:function onClick(){return fetchArticle();}},\"Fectch \"),/*#__PURE__*/React.createElement(\"div\",{id:\"articleData\"}));}}]);return FetchArticle;}(Component);export{FetchArticle as default};","map":{"version":3,"sources":["/Users/Zorro/ReactTestFolder/wikiforumcs/client/src/components/fetcharticle.js"],"names":["React","Component","$","FetchArticle","props","state","fetchArticle","searchTerm","document","getElementById","value","ajax","url","headers","method","dataType","data","success","dataNum","Object","keys","query","pages","console","log","empty","append","title","extract","error","xhr","status","err"],"mappings":"woBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,C,GAEqBC,CAAAA,Y,4GACjB,sBAAYC,KAAZ,CAAkB,8CACd,wBACA,MAAKC,KAAL,CAAa,EAAb,CAFc,aAGjB,CAED;AACA;gEAEQ,CACJ,QAASC,CAAAA,YAAT,EAAuB,CACnB,GAAIC,CAAAA,UAAU,CAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA5D,CACA;AAEJR,CAAC,CAACS,IAAF,CAAO,CACHC,GAAG,CAAE,oFAAqFL,UAArF,CAAiG,iBADnG,CAEHM,OAAO,CAAE,CACL,8BAAgC,GAD3B,CAEL,eAAiB,kBAFZ,CAFN,CAMHC,MAAM,CAAE,KANL,CAOHC,QAAQ,CAAE,OAPP,CAQHC,IAAI,CAAE,EARH,CASHC,OAAO,CAAE,iBAASD,IAAT,CAAe,CACpB;AACA;AACA,GAAIE,CAAAA,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACK,KAAL,CAAWC,KAAvB,EAA8B,CAA9B,CAAd,CACAC,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACK,KAAL,CAAWC,KAAvB,EACA,GAAGJ,OAAO,EAAI,CAAC,CAAf,CAAiB,CACbhB,CAAC,CAAC,cAAD,CAAD,CAAkBuB,KAAlB,GACAvB,CAAC,CAAC,cAAD,CAAD,CAAkBwB,MAAlB,kDAAmEV,IAAI,CAACK,KAAL,CAAWC,KAAX,CAAiBJ,OAAjB,EAA0BS,KAA7F,iFACH,CAHD,IAIK,CACDzB,CAAC,CAAC,cAAD,CAAD,CAAkBuB,KAAlB,GACAvB,CAAC,CAAC,cAAD,CAAD,CAAkBwB,MAAlB,eAAgCV,IAAI,CAACK,KAAL,CAAWC,KAAX,CAAiBJ,OAAjB,EAA0BS,KAA1D,WACAzB,CAAC,CAAC,cAAD,CAAD,CAAkBwB,MAAlB,CAAyBV,IAAI,CAACK,KAAL,CAAWC,KAAX,CAAiBJ,OAAjB,EAA0BU,OAAnD,EACH,CACJ,CAvBE,CAwBHC,KAAK,CAAE,eAASC,GAAT,CAAcC,MAAd,CAAsBC,GAAtB,CAA2B,CAC9BT,OAAO,CAACM,KAAR,CAAc,mBAAd,EACH,CA1BE,CAAP,EA4BH,CACG,mBACI,4CACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,qBAA/B,CAAqD,EAAE,CAAC,iBAAxD,EADJ,cAEI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,OAAzB,CAAiC,OAAO,CAAE,yBAAIvB,CAAAA,YAAY,EAAhB,EAA1C,YAFJ,cAGI,2BAAK,EAAE,CAAC,aAAR,EAHJ,CADJ,CAOH,C,0BAlDqCL,S,SAArBE,Y","sourcesContent":["import React ,{Component} from 'react'\nimport $ from 'jquery'\n\nexport default class FetchArticle extends Component{\n    constructor(props){\n        super()\n        this.state = {}\n    }\n    \n    // Consider: use hook method to execute ajax request to fetch full article content\n    // Or use async fetch in serverside\n\n    render(){\n        function fetchArticle(){\n            var searchTerm = document.getElementById('inputSearchTerm').value\n            // console.log(searchTerm)\n            \n        $.ajax({\n            url: \"https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&titles=\"+ searchTerm +\"&redirects=true\",\n            headers: {\n                'Access-Control-Allow-Origin' : '*',\n                'Content-Type' : 'application/json'\n            },\n            method: 'GET',\n            dataType: 'jsonp',\n            data: '',\n            success: function(data) {\n                // this.setState({data: data});   // notice\n                // console.log(data.query.pages)\n                var dataNum = Object.keys(data.query.pages)[0]\n                console.log(data.query.pages)\n                if(dataNum == -1){\n                    $('#articleData').empty()\n                    $('#articleData').append(`<h1>Sorry, no such article titiled by: ${data.query.pages[dataNum].title}, please try to search in Wikipedia and paste the article titile here.</h1>`)\n                }\n                else {\n                    $('#articleData').empty()\n                    $('#articleData').append(`<h1>${data.query.pages[dataNum].title}</h1>`)\n                    $('#articleData').append(data.query.pages[dataNum].extract)\n                }\n            },\n            error: function(xhr, status, err) {\n                console.error('article not found');\n            }\n        });\n    }\n        return(\n            <div>\n                <input type=\"text\" placeholder=\"Enter a search term\" id=\"inputSearchTerm\"></input>\n                <button type=\"submit\" id=\"fetch\" onClick={()=>fetchArticle()}>Fectch </button>\n                <div id=\"articleData\"></div>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}