{"ast":null,"code":"import config from '../config';\nexport var currentUser = {};\nexport function signUp(usersData) {\n  //console.log(\"signing up...\", usersData)\n  // return a promise\n  return fetch(config.serverUrl + '/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...usersData\n    })\n  }).then(res => {\n    console.log(res.status);\n\n    if (res.status === 200) {\n      alert('Successfully signed up, please log in.');\n      window.location = \"http://localhost:3000/login_page\";\n    } else {\n      alert('Email has been registered, please try another one.');\n      window.location = \"http://localhost:3000/signup_page\";\n    }\n  });\n}\nexport function logIn(usersData) {\n  console.log(usersData);\n  return fetch(config.serverUrl + '/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...usersData\n    })\n  }).then(res => {\n    if (res.status === 200) {\n      alert('Successfully logged in!');\n      window.location = \"http://localhost:3000\";\n      return res.json();\n    } else {\n      alert('Wrong Email or password, please try agian.');\n      localStorage.setItem('ifLogged', 'N');\n      window.location = \"http://localhost:3000/login_page\";\n    }\n  }).then(res => {\n    //console.log('the res is: ', res)//it worked!\n    currentUser = res;\n\n    if (currentUser) {\n      localStorage.setItem('firstName', currentUser.firstName);\n      localStorage.setItem('lastName', currentUser.lastName);\n      localStorage.setItem('ifLogged', 'Y'); //potential type issue\n    }\n  });\n}\nexport function logOut(usersData) {}","map":{"version":3,"sources":["D:/CodeStuff/WikiForum/WikiForum/client/src/api/authmanagement.js"],"names":["config","currentUser","signUp","usersData","fetch","serverUrl","method","headers","body","JSON","stringify","then","res","console","log","status","alert","window","location","logIn","json","localStorage","setItem","firstName","lastName","logOut"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEP,OAAO,SAASC,MAAT,CAAgBC,SAAhB,EAA0B;AAC/B;AACA;AACE,SAAOC,KAAK,CAACJ,MAAM,CAACK,SAAP,GAAiB,kBAAlB,EAAsC;AAC9CC,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFqC;AAKhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJ,EACE,GAAGP;AADL,KADI;AAL0C,GAAtC,CAAL,CAUFQ,IAVE,CAWHC,GAAG,IAAI;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;;AACA,QAAGH,GAAG,CAACG,MAAJ,KAAe,GAAlB,EAAsB;AACpBC,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,kCAAlB;AACD,KAHD,MAGO;AACLF,MAAAA,KAAK,CAAC,oDAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,mCAAlB;AACD;AACF,GApBE,CAAP;AAsBH;AAED,OAAO,SAASC,KAAT,CAAehB,SAAf,EAAyB;AAC9BU,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACA,SAAOC,KAAK,CAACJ,MAAM,CAACK,SAAP,GAAiB,iBAAlB,EAAqC;AAC/CC,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsC;AAK/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJ,EACE,GAAGP;AADL,KADI;AALyC,GAArC,CAAL,CASCQ,IATD,CAUHC,GAAG,IAAI;AACL,QAAGA,GAAG,CAACG,MAAJ,KAAe,GAAlB,EAAsB;AACpBC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,uBAAlB;AACA,aAAON,GAAG,CAACQ,IAAJ,EAAP;AACD,KAJD,MAIO;AACLJ,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,GAAjC;AACAL,MAAAA,MAAM,CAACC,QAAP,GAAkB,kCAAlB;AACD;AACF,GApBE,EAqBHP,IArBG,CAqBGC,GAAG,IAAI;AACb;AACAX,IAAAA,WAAW,GAAGW,GAAd;;AACA,QAAIX,WAAJ,EAAgB;AAChBoB,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCrB,WAAW,CAACsB,SAA9C;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCrB,WAAW,CAACuB,QAA7C;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,GAAjC,EAHgB,CAGsB;AACrC;AACF,GA7BI,CAAP;AA+BD;AAED,OAAO,SAASG,MAAT,CAAgBtB,SAAhB,EAA0B,CAChC","sourcesContent":["import config from '../config'\r\n\r\nexport var currentUser = {}\r\n\r\nexport function signUp(usersData){\r\n  //console.log(\"signing up...\", usersData)\r\n  // return a promise\r\n    return fetch(config.serverUrl+'/api/auth/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(\r\n        {\r\n          ...usersData\r\n        }\r\n      )\r\n      }).then(\r\n        res => {\r\n          console.log(res.status)\r\n          if(res.status === 200){\r\n            alert('Successfully signed up, please log in.')\r\n            window.location = \"http://localhost:3000/login_page\"\r\n          } else {\r\n            alert('Email has been registered, please try another one.')\r\n            window.location = \"http://localhost:3000/signup_page\"\r\n          }\r\n        }\r\n      )\r\n}\r\n\r\nexport function logIn(usersData){\r\n  console.log(usersData)\r\n  return fetch(config.serverUrl+'/api/auth/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n  },\r\n    body: JSON.stringify(\r\n      {\r\n        ...usersData\r\n      }\r\n    )  }).then(\r\n      res => {\r\n        if(res.status === 200){\r\n          alert('Successfully logged in!')\r\n          window.location = \"http://localhost:3000\"\r\n          return res.json()\r\n        } else {\r\n          alert('Wrong Email or password, please try agian.')\r\n          localStorage.setItem('ifLogged', 'N')\r\n          window.location = \"http://localhost:3000/login_page\"\r\n        }\r\n      }\r\n    ).then( res => {\r\n      //console.log('the res is: ', res)//it worked!\r\n      currentUser = res\r\n      if (currentUser){\r\n      localStorage.setItem('firstName', currentUser.firstName)\r\n      localStorage.setItem('lastName', currentUser.lastName)\r\n      localStorage.setItem('ifLogged', 'Y') //potential type issue\r\n      }\r\n    }\r\n    );\r\n}\r\n\r\nexport function logOut(usersData){\r\n}"]},"metadata":{},"sourceType":"module"}