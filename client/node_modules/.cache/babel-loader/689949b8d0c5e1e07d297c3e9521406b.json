{"ast":null,"code":"import { browserhistory } from 'react-router'; // import {\n//     POSTING_ARTICLE_START,\n//     POSTING_ARTICLE_END,\n//     POSTING_ARTICLE_SUCCESS,\n//     POSTING_ARTICLE_FAILURE,\n// } from './action-types'\n//import { Article } from '../../../../server/db/schema'\n\nimport postArticle from '../../api/article';\nimport config from '../../config'; // import { postDiscussionApi } from './api';\n\nexport const createArticle = article => {\n  console.log(\"create article from actions:\", article); //console.log('tartget address: '+ config.serverUrl + 'api/article/newArticle')\n\n  return (dispatch, getState) => {\n    // halting dispach, make async call to db\n    fetch(config.serverUrl + '/api/article/newArticle', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...article,\n        user_id: '12312312312123'\n      })\n    }).then(() => {\n      dispatch({\n        type: 'CREATE_ARTICLE',\n        article: article\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_ARTICLE_ERROR',\n        err: err\n      });\n    });\n  };\n};\nexport function loadArticlesLoading() {\n  return {\n    type: LOAD_ARTICLES_LOADING\n  };\n}\nexport function loadArticlesSuccess() {\n  return {\n    type: LOAD_ARTICLES_SUCCESS,\n    articles\n  };\n}\nexport function loadArticlesError(err) {\n  return {\n    type: LOAD_ARTICLES_ERROR,\n    err\n  };\n}","map":{"version":3,"sources":["/Users/Joesph/React_Apps/wikiforum-v2.0/client/src/redux/actions/articleactions.js"],"names":["browserhistory","postArticle","config","createArticle","article","console","log","dispatch","getState","fetch","serverUrl","method","headers","body","JSON","stringify","user_id","then","type","catch","err","loadArticlesLoading","LOAD_ARTICLES_LOADING","loadArticlesSuccess","LOAD_ARTICLES_SUCCESS","articles","loadArticlesError","LOAD_ARTICLES_ERROR"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,cAA7B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,OAA5C,EADsC,CAEtC;;AACA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3B;AACAC,IAAAA,KAAK,CAACP,MAAM,CAACQ,SAAP,GAAmB,yBAApB,EAA+C;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EACjB,GAAGX,OADc;AAEjBY,QAAAA,OAAO,EAAE;AAFQ,OAAf;AAL0C,KAA/C,CAAL,CASGC,IATH,CASQ,MACR;AACIV,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAG,gBADF;AAELd,QAAAA,OAAO,EAAGA;AAFL,OAAD,CAAR;AAIH,KAfD,EAeGe,KAfH,CAeUC,GAAD,IAAO;AACZb,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAG,sBADF;AAELE,QAAAA,GAAG,EAAGA;AAFD,OAAD,CAAR;AAIH,KApBD;AAqBH,GAvBD;AAwBH,CA3BM;AA6BP,OAAO,SAASC,mBAAT,GAA+B;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAEI;AADH,GAAP;AAGH;AAED,OAAO,SAASC,mBAAT,GAA+B;AAClC,SAAO;AACHL,IAAAA,IAAI,EAAEM,qBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,iBAAT,CAA2BN,GAA3B,EAAgC;AACnC,SAAO;AACHF,IAAAA,IAAI,EAAES,mBADH;AAEHP,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import {browserhistory} from 'react-router'\n// import {\n//     POSTING_ARTICLE_START,\n//     POSTING_ARTICLE_END,\n//     POSTING_ARTICLE_SUCCESS,\n//     POSTING_ARTICLE_FAILURE,\n// } from './action-types'\n//import { Article } from '../../../../server/db/schema'\nimport postArticle from '../../api/article'\nimport config from '../../config'\n\n// import { postDiscussionApi } from './api';\n\nexport const createArticle = (article) => {\n    console.log(\"create article from actions:\", article)\n    //console.log('tartget address: '+ config.serverUrl + 'api/article/newArticle')\n    return (dispatch, getState) => {\n        // halting dispach, make async call to db\n        fetch(config.serverUrl + '/api/article/newArticle', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                ...article,\n                user_id: '12312312312123',\n            })\n        }).then(()=>\n        {\n            dispatch({\n                type : 'CREATE_ARTICLE',\n                article : article\n            })\n        }).catch((err)=>{\n            dispatch({\n                type : 'CREATE_ARTICLE_ERROR',\n                err : err       \n            })\n        })\n    }\n}\n\nexport function loadArticlesLoading() {\n    return {\n        type: LOAD_ARTICLES_LOADING\n    }\n}\n\nexport function loadArticlesSuccess() {\n    return {\n        type: LOAD_ARTICLES_SUCCESS,\n        articles\n    }\n}\n\nexport function loadArticlesError(err) {\n    return {\n        type: LOAD_ARTICLES_ERROR,\n        err\n    }\n}"]},"metadata":{},"sourceType":"module"}